/*

In this file:

// A. Modules
// B. Variables
// C. Color Utilities
// D. Default Body Theme

*/

//////////////////////////////////////////////
// A. Modules
//////////////////////////////////////////////

@use "sass:map";
@use "../breakpoints/style" as breakpoints;

//////////////////////////////////////////////
// B. Variables
//////////////////////////////////////////////

// Scoped to Root

:root {

    // Theme Color Palette

    --primary: #1E00B3;
    --secondary: #64cc7e;
    --dark: #191b35;
    --light: #f1f4f6;

    // Accessible Link Color

    --a11y-link-color: var(--primary);

    // Associated Primary Colors

    --primary-text: white;
    --primary-border: hsla(0, 0%, 0%, 0.25);
    --primary-link: currentColor;
    --primary-confirm: #16db93;
    --primary-warn: #ff73aa;

    // Associated Secondary Colors

    --secondary-text: var(--dark);
    --secondary-border: hsla(0, 0%, 0%, 0.25);
    --secondary-link: currentColor;
    --secondary-confirm: #41e0f2;
    --secondary-warn: #ffa3a4;

    // Associated Dark Colors

    --dark-text: white;
    --dark-border: hsla(0, 0%, 100%, 0.125);
    --dark-link: currentColor;
    --dark-confirm: #00a242;
    --dark-warn: #fe3c3e;

    // Associated Light Colors

    --light-text: var(--dark);
    --light-border: hsla(0, 0%, 50%, 0.25);
    --light-link: var(--a11y-link-color);
    --light-confirm: #007e35;
    --light-warn: #ce1736;

    // Associated Light Colors

    --white-text: var(--dark);
    --white-border: hsla(0, 0%, 50%, 0.25);
    --white-link: var(--a11y-link-color);
    --white-confirm: #008237;
    --white-warn: #e4193c;
}

$theme-colors: (

    "white": (
        swatch: white,
        text: var(--white-text),
        border: var(--white-border),
        link: var(--white-link),
        confirm: var(--white-confirm),
        warn: var(--white-warn)
    ), 
        
    "primary": (
        swatch: var(--primary),
        text: var(--primary-text),
        border: var(--primary-border),
        link: var(--primary-link),
        confirm: var(--primary-confirm),
        warn: var(--primary-warn)
    ), 
    
    "secondary": (
        swatch: var(--secondary),
        text: var(--secondary-text),
        border: var(--secondary-border),
        link: var(--secondary-link),
        confirm: var(--secondary-confirm),
        warn: var(--secondary-warn)
    ), 
    
    "dark": (
        swatch: var(--dark),
        text: var(--dark-text),
        border: var(--dark-border),
        link: var(--dark-link),
        confirm: var(--dark-confirm),
        warn: var(--dark-warn)
    ), 
    
    "light": (
        swatch: var(--light),
        text: var(--light-text),
        border: var(--light-border),
        link: var(--light-link),
        confirm: var(--light-confirm),
        warn: var(--light-warn)
    )
);

//////////////////////////////////////////////
// C. Color Utilities 
//////////////////////////////////////////////

body:not([class*="theme-"]),
[class*="theme-"] {
    background-color: var(--background-color);

    color: var(--text-);
    
    border-color: var(--border-color);

    * {
        &:not([class*="theme-"]):not(input):not(textarea):not(select):not(footer) {
            border-color: inherit;
        }
    }

    td > a, 
    .td-content > a,
    p > a:not([class*="text-"]) {
        color: var(--link-color);
    }

    select option,
    [data-toggle="dropdown"] ~ ul, 
    .modal::before,
    .modal__content,
    .table-scroll__container::after {
        background-color: var(--background-color);
    }
    
    [data-toggle="dropdown"][class*="-icon"] ~ ul::before{
        color: var(--border-color);
    }

    [data-toggle="dropdown"][class*="-icon"] ~ ul::after {
        color: var(--background-color);
    }

    // Alerts

    .alert--confirm {
        color: var(--confirm-color);
    }

    .alert--confirm--inverse {
        background-color: var(--confirm-color);

        color: var(--background-color);
    }
    
    .alert--warn,
    .required-indicator__icon,
    .form-entry__field__label::after,
    .is-invalid .form-entry__feedback, 
    .is-invalid .form-entry__field__input::after,
    .is-invalid .form-entry__field__select::after,
    .is-invalid [class*="_icon_warn"],
    .is-invalid .form-entry__option
    {
        color: var(--warn-color);
    }

    .alert--warn--inverse {
        background-color: var(--warn-color);

        color: var(--background-color);
    }

    // Gradient Veneer

    [class*="gradient-veneer"] {
        --gradient-color: var(--background-color);
    }
}

@each $breakpoint in map.keys(breakpoints.$breakpoints) {
    @include breakpoints.breakpoints-up($breakpoint) {
        $mod: breakpoints.breakpoint-modifier($breakpoint, breakpoints.$breakpoints);

        @each $name, $color-map in $theme-colors {
            $swatch: map.get($color-map, "swatch");
            $text: map.get($color-map, "text");
            $border: map.get($color-map, "border");
            $link: map.get($color-map, "link");

            $confirm: map.get($color-map, "confirm");
            $warn: map.get($color-map, "warn");

            .theme-#{$name}#{$mod} {
                --background-color: #{$swatch};
                --text-: #{$text};
                --border-color: #{$border};
                --link-color: #{$link};
                --confirm-color: #{$confirm};
                --warn-color: #{$warn};
            }

            .background-#{$name}#{$mod}{
                --background-color: #{$swatch};
                background-color: var(--background-color) !important;
            }

            .text-#{$name}#{$mod}{
                --text-color: #{$swatch};
                color: var(--text-color) !important;
            }
        }

    }
}