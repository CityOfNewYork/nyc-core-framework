/*

In this file:

// A. Variables
// B. Grid Block
// C. Grid Gap Modifier
// D. Grid Size Utilities and Modifiers
// E. Grid Cell Size Utilities and Modifiers

*/

//////////////////////////////////////////////
// A. Modules
//////////////////////////////////////////////

@use "sass:map";
@use "../breakpoints/style" as breakpoints;
@use "../spacing/style" as spacing;

//////////////////////////////////////////////
// A. Variables
//////////////////////////////////////////////

$columns: 12;

//////////////////////////////////////////////
// B. Grid Block
//////////////////////////////////////////////

.grid {
    display: flex;
    flex-wrap: wrap;
    min-width: 100%;
}

[class*="grid__cell"] {
    flex: 1 1 100%;
    max-width: 100%;
}

//////////////////////////////////////////////
// C. Grid Gap Modifiers
//////////////////////////////////////////////

[class*="grid--gap"] {
    --gap-size: 0;

    margin-top: calc(var(--gap-size) * -1);
    margin-right: calc(var(--gap-size) * -0.5);
    margin-left: calc(var(--gap-size) * -0.5);

    > [class*="grid__cell"] {
        margin-top: var(--gap-size);
        padding-left: calc(var(--gap-size) * 0.5);
        padding-right: calc(var(--gap-size) * 0.5);
    }
}

@each $spacer, $value in spacing.$spacers {
    .grid--gap-#{$spacer} {
        --gap-size: #{$value};
    }
}

.grid--gap-border {
    --gap-size: var(--default-border-width);
}

//////////////////////////////////////////////
// D. Grid Size Utilities and Modifiers
//////////////////////////////////////////////

@each $breakpoint in map.keys(breakpoints.$breakpoints) {
    @include breakpoints.breakpoints-up($breakpoint) {
        $mod: breakpoints.breakpoint-modifier($breakpoint, breakpoints.$breakpoints);

        .grid--cell-fill#{$mod} > [class*="grid__cell"] {
            flex: 1;
        }

        .grid--cell-fit#{$mod} > [class*="grid__cell"] {
            flex: none;
        }
        
        @for $i from 1 through $columns {
            .grid--cell-#{$i}#{$mod} > [class*="grid__cell"] {
                flex: 0 0 100% / $columns * $i;
                max-width: 100% / $columns * $i;
            }
        }

        @for $i from 1 through $columns {
            .order-#{$i}#{$mod} {
                order: $i;
            }
        }
    }
}

//////////////////////////////////////////////
// E. Grid Cell Size Utilities and Modifiers
//////////////////////////////////////////////

@each $breakpoint in map.keys(breakpoints.$breakpoints) {
    @include breakpoints.breakpoints-up($breakpoint) {
        $mod: breakpoints.breakpoint-modifier($breakpoint, breakpoints.$breakpoints);

        @for $i from 1 through $columns {
            .grid > .grid__cell.grid--cell-#{$i}#{$mod} {
                flex: 0 0 100% / $columns * $i;
                max-width: 100% / $columns * $i;
            }
        }

        .grid > .grid__cell.grid--cell-fill#{$mod} {
            flex: 1 !important;
            max-width: unset;
        }
        
        .grid > .grid__cell.grid--cell-fit#{$mod} {
            flex: none;
            max-width: unset;
        }
    }
}
